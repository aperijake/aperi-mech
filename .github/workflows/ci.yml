name: CI/CD Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

permissions:
    contents: read

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              
            - name: Set up Azure CLI
              uses: azure/CLI@v1
              with:
                azcliversion: 2.62.0
                inlineScript: |
                  az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
                  VM_STATUS=$(az vm get-instance-view --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_VM_NAME }} --query instanceView.statuses[1].displayStatus --output tsv)
                  if [ "$VM_STATUS" != "VM running" ]; then
                    az vm start --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_VM_NAME }}
                    echo "::set-output name=vm_started::true"
                  else
                    echo "::set-output name=vm_started::false"
                  fi
                
            - name: Build project
              run: |
                ssh ${{ secrets.VM_USERNAME }}@${{ secrets.VM_IP }} "docker-compose run --service-ports ${{ secrets.DOCKER_SERVICE }} /bin/bash -c 'git checkout ${{ github.sha }} && ./do_configure && cd build/Release && make -j 4'"

            - name: Run tests
              run: |
                ssh ${{ secrets.VM_USERNAME }}@${{ secrets.VM_IP }} "docker-compose run --service-ports ${{ secrets.DOCKER_SERVICE }} /bin/bash -c 'cd build/Release && make run_all_unit_tests'"

            - name: Stop Azure VM
              if: steps.start_vm.outputs.vm_started == 'true'
              run: |
                az vm deallocate --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_VM_NAME }}